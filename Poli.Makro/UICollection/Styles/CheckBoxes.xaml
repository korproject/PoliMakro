<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Poli.Makro.Converters">

    <!--#region Converter -->

    <converters:SideMenuExpConverter x:Key="SideMenuExpConverter" />
    <converters:SideMenuItemColorConverter x:Key="SideMenuItemColorConverter" />
    <converters:ToggleBoolConverter x:Key="ToggleBoolConverter"/>

    <!--#endregion -->

    <!--#region Colors-->

    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>

    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>

    <!--#endregion -->

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCheckBox" TargetType="{x:Type CheckBox}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Margin="0 0 10 0">
                            <Ellipse Height="20" Width="20" Opacity=".1"
                                     StrokeThickness="1" Fill="{StaticResource White}"
                                     Stroke="{Binding ElementName=contentPresenter, Path=Content, Converter={StaticResource SideMenuItemColorConverter}}"/>
                            <Ellipse x:Name="Ellipse"
                                     StrokeThickness="1" Height="8" Width="8" 
                                     Fill="{Binding ElementName=contentPresenter, Path=Content, Converter={StaticResource SideMenuItemColorConverter}}"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"/>
                        <Grid.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{TemplateBinding Tag}"/>
                            </ToolTip>
                        </Grid.ToolTip>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- When checkellipse checked -->
                        <Trigger Property="IsChecked" Value="True">
                            <!-- Reverse to up -->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--#region Ellipse Height and Width Animations-->

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="Ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="16"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="11"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="16"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="16"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="11"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="16"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <!--#endregion -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- Reverse to down -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--#region Ellipse Height and Width Animations-->

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="Ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="8"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="10"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="8"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="8"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="10"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="8"/>
                                        </DoubleAnimationUsingKeyFrames>

                                        <!--#endregion -->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="Ellipse" Value=".8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource BlueGrey300}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>