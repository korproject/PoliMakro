<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Poli.Makro.Converters">

    <!--#region Custom TabItem Style-->

    <!--#region Converter -->

    <converters:SideMenuExpConverter x:Key="SideMenuExpConverter" />

    <!--#endregion -->

    <!--#region Colors-->

    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#FFFFFF"/>

    <!--#endregion -->

    <!--#region Linear Gradient Brushes-->
    <LinearGradientBrush x:Key="HalfGradient" StartPoint="0,0" EndPoint="0,1" Opacity=".5">
        <GradientStop Color="#FFFFFF" Offset="0.0"/>
        <GradientStop Color="#FFFFFF" Offset="0.8"/>
        <GradientStop Color="#ECEFF1" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F0F0F0" Offset="0.0"/>
        <GradientStop Color="#E5E5E5" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECF4FC" Offset="0.0"/>
        <GradientStop Color="#DCECFC" Offset="1.0"/>
    </LinearGradientBrush>

    <!--#endregion -->

    <Style x:Key="CustomTabItemStyle" TargetType="{x:Type TabItem}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Foreground" Value="{StaticResource BlueGrey50}"/>
        <Setter Property="Background" Value="{StaticResource ResourceKey=ThemeColor1}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <StackPanel x:Name="templateRoot" Orientation="Vertical" Margin="1 1 1 0" VerticalAlignment="Bottom">
                        <Border x:Name="mainBorder">
                            <Border x:Name="innerBorder" Background="{StaticResource ThemeColor1}"/>
                        </Border>

                        <StackPanel Orientation="Horizontal">
                            <Path x:Name="Path"
                                  Height="15" Width="15" Margin="10 0 0 0"
                                  Stretch="Uniform"
                                  Fill="{StaticResource White}"
                                  Data="{TemplateBinding Tag}"/>

                            <StackPanel Orientation="Vertical">
                                <StackPanel x:Name="contentBorder" Orientation="Vertical" Margin="0" Opacity=".9">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      ContentSource="Header" Focusable="False" 
                                                      HorizontalAlignment="Center" 
                                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                </StackPanel>
                                <Path x:Name="TrianglePath"
                                      Height="10" Width="10"
                                      Stretch="Uniform" Opacity="0" 
                                      VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                      Fill="{StaticResource ResourceKey=BlueGrey200}"
                                      Data="{Binding Source={StaticResource Triangle}, Path=Data}">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </StackPanel>

                        </StackPanel>

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TrianglePath" Property="Opacity" Value="1"/>
                            <Setter TargetName="contentBorder" Property="Margin" Value="5 5 5 0"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="Background" Value="{StaticResource ThemeColor2}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion -->

    <!--#region Poli Makro TabItem Based SideBar -->

    <SolidColorBrush x:Key="TabItem.Static.Border2" Color="#ACACAC"/>
    <SolidColorBrush x:Key="TabItem.MouseOver.Border2" Color="#7EB4EA"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Background2" Color="#F0F0F0"/>
    <SolidColorBrush x:Key="TabItem.Disabled.Border2" Color="#D9D9D9"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border3" Color="#ACACAC"/>

    <Style x:Key="PoliMakroTabItemBasedSideBar" TargetType="{x:Type TabItem}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="70" Width="70" Margin="0 1 0 1">
                        <Border x:Name="Border" 
                                Background="{StaticResource ResourceKey=ThemeColor2}"
                                BorderBrush="{StaticResource ResourceKey=White}">
                        </Border>
                        <Grid>
                            <Path x:Name="Path"
                                  Height="18" Width="18"
                                  Stretch="Uniform" Opacity=".7" 
                                  Fill="{StaticResource ResourceKey=White}"
                                  Data="{TemplateBinding Tag}" 
                                  SnapsToDevicePixels="True"/>

                            <Path x:Name="TrianglePAth"
                                  Height="10" Width="10" Margin="-10"
                                  Stretch="Uniform" Opacity="0" 
                                  VerticalAlignment="Center" HorizontalAlignment="Right"
                                  Fill="{StaticResource ResourceKey=ThemeColor1}"
                                  Data="{Binding Source={StaticResource Triangle}, Path=Data}" 
                                  SnapsToDevicePixels="True">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <Grid.ToolTip>
                            <ToolTip Style="{DynamicResource CustomTooltipforSideBarTabHeader}"/>
                        </Grid.ToolTip>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeColor3}"/>
                            <Setter TargetName="Path" Property="Height" Value="20"/>
                            <Setter TargetName="Path" Property="Width" Value="20"/>
                            <Setter TargetName="Path" Property="Opacity" Value=".8"/>
                            <Setter TargetName="TrianglePAth" Property="Opacity" Value="1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Path" Property="Opacity" Value=".5"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeColor3}"/>
                            <Setter TargetName="Path" Property="Height" Value="22"/>
                            <Setter TargetName="Path" Property="Width" Value="22"/>
                            <Setter TargetName="Path" Property="Opacity" Value=".9"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2 0 0 0"/>
                            <Setter TargetName="TrianglePAth" Property="Opacity" Value="1"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion -->


    <!--#region Poli Makro TabItem DotDot SideBar -->

    <Style x:Key="PoliMakroTabItemDotDotBar" TargetType="{x:Type TabItem}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="30" Width="60" Margin="0 1 0 1">
                        <Ellipse x:Name="Ellipse" Width="18" Height="18" Fill="{StaticResource ThemeColor2}"
                                   StrokeThickness="2" Stroke="{StaticResource ThemeColor3}"/>
                        <Grid.ToolTip>
                            <ToolTip Style="{DynamicResource CustomTooltipforSideBarTabHeader}"/>
                        </Grid.ToolTip>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeColor3}"/>
                            <Setter TargetName="Path" Property="Height" Value="20"/>
                            <Setter TargetName="Path" Property="Width" Value="20"/>
                            <Setter TargetName="Path" Property="Opacity" Value=".8"/>
                            <Setter TargetName="TrianglePAth" Property="Opacity" Value="1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Path" Property="Opacity" Value=".5"/>
                        </MultiDataTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource BlueGrey200}"/>
                            <Setter TargetName="Ellipse" Property="Width" Value="20"/>
                            <Setter TargetName="Ellipse" Property="Height" Value="20"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion -->
</ResourceDictionary>